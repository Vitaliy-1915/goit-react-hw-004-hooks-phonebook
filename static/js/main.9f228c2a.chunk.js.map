{"version":3,"sources":["Components/Form/Form.module.css","Components/ContactsList/ContactsList.module.css","Components/Filter/Filter.module.css","Components/Button/Button.module.css","Components/PhoneBookTitle/PhoneBookTitle.jsx","Components/Button/Button.jsx","Components/ContactsList/ContactsList.jsx","Components/Form/Form.jsx","Components/Filter/Filter.jsx","App.js","index.js"],"names":["module","exports","PhoneBookTitle","title","Button","type","text","onClick","className","s","button","ContactsList","contacts","onDeleteContact","ul","map","id","name","number","li","Form","onSubmit","useState","setName","setNumber","handleChange","e","currentTarget","value","reset","form","preventDefault","label","input","onChange","pattern","required","Filter","autoComplete","App","JSON","parse","window","localStorage","getItem","setContacts","filterValue","setFilterValue","useEffect","setItem","stringify","filterContacts","filter","contact","toLowerCase","includes","toLocaleLowerCase","unId","find","cont","alert","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9f228c2a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__1fkhq\",\"label\":\"Form_label__2G74p\",\"input\":\"Form_input__3rEsV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ul\":\"ContactsList_ul__4ZqLx\",\"li\":\"ContactsList_li__3RsHC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__1nvdE\",\"input\":\"Filter_input__1fFBi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__3Twdf\"};","import React from 'react';\n\nfunction PhoneBookTitle({ title }) {\n  return <h2>{title}</h2>;\n}\n\nexport default PhoneBookTitle;\n","import React from 'react';\nimport s from '../Button/Button.module.css';\n\nfunction Button({ type, text, onClick }) {\n  return (\n    <>\n      <button type={type} onClick={onClick} className={s.button}>\n        {text}\n      </button>\n    </>\n  );\n}\n\nexport default Button;\n","import React from 'react';\nimport Button from '../Button/Button';\nimport s from '../ContactsList/ContactsList.module.css';\n// import { v4 as unId } from \"uuid\";\n\nfunction ContactsList({ contacts, onDeleteContact }) {\n  return (\n    <ul className={s.ul}>\n      {contacts.map(({ id, name, number }) => (\n        <li className={s.li} key={id}>\n          {name}: {number}\n          <Button\n            type=\"button\"\n            text=\"Delete\"\n            onClick={() => onDeleteContact(id)}\n          />\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport default ContactsList;\n","import { useState } from 'react';\nimport Button from '../Button/Button';\nimport s from '../Form/Form.module.css';\n\nfunction Form({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    onSubmit({ name, number });\n\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        Name\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          onChange={handleChange}\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n\n      <label className={s.label}>\n        Number\n        <input\n          className={s.input}\n          type=\"tel\"\n          name=\"number\"\n          onChange={handleChange}\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n      <Button type=\"submit\" text=\"Add contact\" />\n    </form>\n  );\n}\n\nexport default Form;\n\n// export class Form extends Component {\n//   state = {\n//     name: '',\n//     number: '',\n//   };\n\n//   handleChange = e => {\n//     // const { name, value } = e.currentTarget;\n//     this.setState({\n//       [e.currentTarget.name]: e.currentTarget.value,\n//     });\n//   };\n\n//   handleSubmit = e => {\n//     e.preventDefault();\n//     this.props.onSubmit(this.state);\n\n//     this.reset();\n//   };\n\n//   reset = () => {\n//     this.setState({\n//       name: '',\n//       number: '',\n//     });\n//   };\n\n//   render() {\n//     return (\n//       <form className={s.form} onSubmit={this.handleSubmit}>\n//         <label className={s.label}>\n//           Name\n//           <input\n//             className={s.input}\n//             type=\"text\"\n//             name=\"name\"\n//             onChange={this.handleChange}\n//             value={this.state.name}\n//             pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n//             title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n//             required\n//           />\n//         </label>\n\n//         <label className={s.label}>\n//           Number\n//           <input\n//             className={s.input}\n//             type=\"tel\"\n//             name=\"number\"\n//             onChange={this.handleChange}\n//             value={this.state.number}\n//             pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n//             title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n//             required\n//           />\n//         </label>\n//         <Button type=\"submit\" text=\"Add contact\" />\n//       </form>\n//     );\n//   }\n// }\n\n// export default Form;\n","import React from 'react';\nimport s from '../Filter/Filter.module.css';\n\nfunction Filter({ onChange, value }) {\n  return (\n    <label className={s.label}>\n      Find contacts by name\n      <input\n        className={s.input}\n        type=\"text\"\n        name=\"name\"\n        value={value}\n        onChange={onChange}\n        autoComplete = 'Off'\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n      />\n    </label>\n  );\n}\n\nexport default Filter;\n","import './App.css';\nimport { useState, useEffect } from 'react';\nimport PhoneBookTitle from './Components/PhoneBookTitle/PhoneBookTitle';\nimport ContactsList from './Components/ContactsList/ContactsList';\nimport Form from './Components/Form/Form';\nimport Filter from './Components/Filter/Filter';\nimport { v4 as unId } from 'uuid';\n\nfunction App() {\n  const [contacts, setContacts] = useState(() => {\n    return JSON.parse(window.localStorage.getItem('contacts')) ?? [];\n  });\n  const [filterValue, setFilterValue] = useState('');\n\n  useEffect(() => {\n    window.localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const formSubmit = value => {\n    const contact = {\n      id: unId(),\n      name: value.name,\n      number: value.number,\n    };\n\n    contacts.find(\n      cont => cont.name.toLowerCase() === contact.name.toLowerCase(),\n    )\n      ? alert(`${contact.name} is already in contacts`)\n      : setContacts([...contacts, contact]);\n  };\n\n  const onChangeFilter = e => {\n    setFilterValue(e.currentTarget.value);\n  };\n\n  const onDeleteContact = contactId => {\n    setContacts(contacts.filter(contact => contact.id !== contactId));\n  };\n\n  const filterContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filterValue.toLocaleLowerCase()),\n  );\n\n  return (\n    <div className=\"App\">\n      <PhoneBookTitle title=\"Phonebook\" />\n      <Form onSubmit={formSubmit} />\n      <PhoneBookTitle title=\"Contacts\" />\n      <Filter value={filterValue} onChange={onChangeFilter} />\n      <ContactsList\n        contacts={filterContacts}\n        onDeleteContact={onDeleteContact}\n      />\n    </div>\n  );\n}\n\nexport default App;\n\n// export class App extends Component {\n//   state = {\n//     contacts: [\n//       { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n//       { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n//       { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n//       { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n//     ],\n//     filter: '',\n//   };\n\n//   componentDidMount() {\n//     const contacts = localStorage.getItem('contacts');\n//     const parsedContacts = JSON.parse(contacts);\n\n//     if (parsedContacts) {\n//       this.setState({ contacts: parsedContacts });\n//     }\n//   }\n\n//   componentDidUpdate(prevProps, prevState) {\n//     if (this.state.contacts !== prevState.contacts) {\n//       localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n//     }\n//   }\n\n//   formSubmit = value => {\n//     const contact = {\n//       id: unId(),\n//       name: value.name,\n//       number: value.number,\n//     };\n\n//     //   this.setState((prevState) => ({\n//     // contacts: [...prevState.contacts, contact],\n//     //   }));\n\n//     this.state.contacts.find(cont =>\n//       cont.name.toLowerCase().includes(contact.name.toLowerCase()),\n//     )\n//       ? alert(`${contact.name} is already in contacts`)\n//       : this.setState(prevState => ({\n//           contacts: [...prevState.contacts, contact],\n//         }));\n//   };\n\n//   onChangeFilter = e => {\n//     this.setState({\n//       filter: e.currentTarget.value,\n//     });\n//   };\n\n//   onDeleteContact = contactId => {\n//     // console.log(contactId);\n//     this.setState(prevState => ({\n//       contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n//     }));\n//   };\n\n//   render() {\n//     // const { contacts, filter } = this.state;\n\n//     const normalizeContacts = this.state.filter.toLocaleLowerCase();\n\n//     const filterContacts = this.state.contacts.filter(contact =>\n//       contact.name.toLowerCase().includes(normalizeContacts),\n//     );\n\n//     return (\n//       <div className=\"App\">\n//         <PhoneBookTitle title=\"Phonebook\" />\n//         <Form onSubmit={this.formSubmit} />\n//         <PhoneBookTitle title=\"Contacts\" />\n//         <Filter value={this.state.filter} onChange={this.onChangeFilter} />\n//         <ContactsList\n//           contacts={filterContacts}\n//           onDeleteContact={this.onDeleteContact}\n//         />\n//       </div>\n//     );\n//   }\n// }\n\n// export default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'modern-normalize/modern-normalize.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}